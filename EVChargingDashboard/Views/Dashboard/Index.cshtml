@model EVCharging.Models.ClaimModel

@{
    ViewBag.Title = "Microsoft EV Charging";
}

<p>
    <img src="~/Dashboard.png" width="800"/>
</p>
<br />
<hr />
<form method="post">
    <input id="notify" type="submit" class="btn btn-primary" value="Notify me when a charger becomes available" asp-controller="Dashboard" asp-action="Notify" />
</form>
<br />
<hr />
<p>
    <div id="chargers" width="800">Please wait while charger usage data is collected...</div>
</p>

@section scripts {
    <script src="~/lib/Chart.js/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function ()
        {
            // connection to SignalR hub
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/statusHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            const CHART_COLORS = {
                red: 'rgb(255, 0, 0)',
                magenta: 'rgb(255, 0, 255)',
                yellow: 'rgb(255, 255, 0)',
                green: 'rgb(0, 128, 0)',
                blue: 'rgb(0, 0, 255)',
                cyan: 'rgb(0, 255, 255)',
                grey: 'rgb(128, 128, 128)',
                black: 'rgb(0, 0, 0)',
                silver: 'rgb(192, 192, 192)',
                lime: 'rgb(0, 255, 0)',
                maroon: 'rgb(128, 0, 0)',
                olive: 'rgb(128, 128, 0)',
                purple: 'rbg(128, 0, 128)',
                teal: 'rgb(0, 128, 128)',
                navy: 'rgb(0, 0, 128)'
            };

            const NAMED_COLORS = [
                CHART_COLORS.red,
                CHART_COLORS.magenta,
                CHART_COLORS.yellow,
                CHART_COLORS.green,
                CHART_COLORS.blue,
                CHART_COLORS.cyan,
                CHART_COLORS.grey,
                CHART_COLORS.black,
                CHART_COLORS.silver,
                CHART_COLORS.lime,
                CHART_COLORS.maroon,
                CHART_COLORS.olive,
                CHART_COLORS.purple,
                CHART_COLORS.teal,
                CHART_COLORS.navy
            ];

            function namedColor(index)
            {
                return NAMED_COLORS[index % NAMED_COLORS.length];
            }

            connection.on("addChargers", function (html)
            {
                document.getElementById("chargers").innerHTML = html;

                // remove old charts
                while (charts.length > 0)
                {
                    var currentChart = charts.pop();
                    currentChart.destroy();
                }
            });

            connection.on("availableStatus", function (available)
            {
                if (!available)
                {
                    document.getElementById("notify").type = 'submit';
                }
                else
                {
                    document.getElementById("notify").type = 'hidden';
                }
            });

            var charts = new Array();

            connection.on("addChart", function (name, timestamps, values)
            {
                charts.push(new Chart(document.getElementById(name).getContext('2d'), {
                   type: 'line',
                    options: {
                        spanGaps: true,
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false,
                            },
                            title: {
                                display: true,
                                text: 'Meter Values'
                            }
                        },
                        scales: {
                            xAxis: [{
                                type: 'timeseries'
                            }],
                            yAxis: [{
                                ticks:
                                {
                                    beginAtZero: true
                                }
                            }]
                        }
                    },
                    data: {
                        labels: timestamps,
                        datasets: [{
                            label: name,
                            borderColor: namedColor(4),
                            borderwidth: 2,
                            cubicInterpolationMode: 'monotone',
                            tension: 0.5,
                            data: values
                        }]
                    }
                }));
            });

            // add table function
            connection.on("addTable", function (name, html)
            {
                document.getElementById(name).innerHTML = html;
            });

            connection.start().then(function ()
            {
                console.log('SignalR connection started');
            })
            .catch(error =>
            {
                console.error('SignalR error: ' + error.message);
            });
        });
    </script>
}
